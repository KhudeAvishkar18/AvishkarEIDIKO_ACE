BROKER SCHEMA FileProcess_SIMOtoACM

DECLARE count SHARED INTEGER 0;

--DECLARE mailRecipient EXTERNAL CHARACTER '';
--DECLARE mailRecipient1 EXTERNAL CHARACTER '';
--DECLARE mailSender EXTERNAL CHARACTER '';

CREATE COMPUTE MODULE SIMOtoACM_subFlow_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE sleep_return BOOLEAN;
		
		-- Checking How many times we already retried
		IF(count < retry_count) THEN
		
			SET count = count+1;
			SET OutputRoot = InputRoot;
			SET OutputLocalEnvironment = InputLocalEnvironment;
			
			-- Checking whether exception msg coming from 'PickFileFromSIMO' node or 'DropFileInACM' node
			IF(InputExceptionList.RecoverableException.Label = 'FileProcess_SIMOtoACM.MF_mySIMOtoACM.PickFileFromSIMO') THEN
				SET sleep_return = SLEEP(30000); -- Wait for 30 seconds
				LOG EVENT VALUES('Unable to pick file from simo server- Retry count:', count, 'FileProcess_SIMO_TO_ACM', CURRENT_TIMESTAMP); -- log to console
				PROPAGATE TO TERMINAL 'out2'; -- Propagate to file read node
			ELSE
				SET sleep_return = SLEEP(30000);
				LOG EVENT VALUES('Unable to send file to ACM server- Retry count:', count, 'FileProcess_SIMO_TO_ACM', CURRENT_TIMESTAMP);
				PROPAGATE TO TERMINAL 'out'; -- Propagate to file output node
			END IF;
			
		ELSE
		
			-- Declaring variables to get value from exception list
			DECLARE exception_data CHARACTER '';
			DECLARE My_label CHARACTER;
			DECLARE error_ref ROW;
			DECLARE inref REFERENCE TO InputExceptionList.*[1];
			DECLARE Total_Exc CHARACTER '';
			
			--code to get actual exception
			IF(NOT CONTAINS(FIELDNAME(inref.[<]), 'Exception')) THEN
				SET My_label = FIELDNAME(InputExceptionList.*[1]);
				SET Total_Exc = Total_Exc || COALESCE(CAST(inref.Number as CHARACTER),'') || ':' || COALESCE(inref.Text, '') || ':' || COALESCE(inref.Label, '') || '|';
				SET error_ref = inref;
			ELSE
				X:WHILE(EXISTS(inref.[])) DO 
					IF(NOT CONTAINS(FIELDNAME(inref.[<]),'Exception')) THEN
						SET error_ref = inref;
						LEAVE X;
					END IF;
					
					SET Total_Exc = Total_Exc|| COALESCE(CAST(inref.Number as CHARACTER),'') || ':' || COALESCE(inref.Text, '') || ':'|| COALESCE(inref.Label, '') ||'|';
					
					SET My_label = FIELDNAME(inref.[<]);
					MOVE inref LASTCHILD;
				END WHILE;
			END IF;
		
			SET Total_Exc = Total_Exc || '|' || COALESCE(error_ref.[<].Text, '');
			SET exception_data = Total_Exc;
			
			DECLARE myexc CHARACTER '';
			DECLARE my_ref REFERENCE TO inref.[>];
			
			while LASTMOVE(my_ref) DO
		 		-- IF field name condition
			 	IF(EXISTS(my_ref.Text[]))THEN
			 
					SET myexc = myexc || '| ' || my_ref.Text;
				END IF;
			
				MOVE my_ref NEXTSIBLING;
	
			END WHILE;
			SET exception_data = 'Exception Details: ' || exception_data || '| ' || myexc;
		
			-- console logging
			LOG EVENT VALUES('Error Details: ', exception_data, 'FileProcess_SIMO_TO_ACM', CURRENT_TIMESTAMP);
		
			-- Setting exception data and email subject based on from which node error is coming
			IF(InputExceptionList.RecoverableException.Label = 'FileProcess_SIMOtoACM.MF_mySIMOtoACM.PickFileFromSIMO') THEN
				SET exception_data = 'Hi team, we observed that there is a SFTP Connectivity issue, Hence unable to process the file from the source - SIMO.';
				SET OutputRoot.EmailOutputHeader.Subject = 'ALERT!!! unable to pick the file from SIMO sftp server';
			ELSE
				SET exception_data = 'Hi team, we observed that there is a SFTP Connectivity issue, Hence unable to process the file to the destinataion - ACM, kindly find the attached file';
				SET OutputRoot.EmailOutputHeader.Subject = 'ALERT!!! unable to send the file to ACM sftp server';
			END IF;
			--SET exception_data='Hi team, we observed that there is a SFTP Connectivity issue, Hence unable to process the file to the destinataion -ACM, kindly find the attached file Alert unable to send the file';
		
			-- Making count variable to 0, so that from next time it will start with 0
			SET count=0;
			
			-- Setting email details
			SET OutputRoot.EmailOutputHeader.To = mailRecipient || ',' || mailRecipient1 || ',' || mailRecipient2 || ',' || mailRecipient3;
			SET OutputRoot.EmailOutputHeader.From = mailSender;
			--SET OutputRoot.EmailOutputHeader.Subject='ALERT!!! unable to pick/send the file - ACM';
			--DECLARE mydata BLOB CAST(result AS BLOB CCSID 1208 ENCODING 546);
			SET OutputRoot.BLOB.BLOB = CAST(exception_data AS BLOB CCSID 1208 ENCODING 546);
			SET OutputLocalEnvironment.Destination.Email.Attachment.Content = InputRoot.BLOB.BLOB;
			--SET OutputLocalEnvironment.Destination.Email.Attachment.ContentType='text/xml';
			--SET OutputLocalEnvironment.Destination.Email.Attachment.ContentEncoding='Base64';
			SET OutputLocalEnvironment.Destination.Email.Attachment.ContentName = InputLocalEnvironment.Destination.File.Name;
			PROPAGATE TO TERMINAL 'out1';	-- Propagating to email output nodes
		END IF;
		RETURN FALSE;
	END;
END MODULE;
